op01.cst 大小：2,883 字节 330B0000 FD180000 0x0B33=2867 0x18FD=6397
数据体zilb解压后长度为：6,397 字节
前32位十六进制数：
Offset      0  1  2  3  4  5  6  7   8  9  A  B  C  D  E  F
00000000   43 61 74 53 63 65 6E 65  33 0B 00 00 FD 18 00 00   CatScene3   ?  
00000010   78 DA B5 98 7B 70 54 D5  19 C0 17 4B 6B 15 6B AB   x诘榹pT??Kk k?

op02.cst 大小：36,255 字节 8F8D0000 4CF10100 0x8D8F=36239 0x01F14C=127308
数据体zilb解压后长度为：127,308 字节
前32位十六进制数：
Offset      0  1  2  3  4  5  6  7   8  9  A  B  C  D  E  F
00000000   43 61 74 53 63 65 6E 65  8F 8D 00 00 4C F1 01 00   CatScene    L? 
00000010   78 DA EC DD 05 7C 57 65  DF F8 71 86 74 83 DE 8A   x陟?|We啉q唗冝?

op03.cst 大小：17,786 字节 6A450000 41EF0000 0x456A=17770 0xEF41=61249
数据体zilb解压后长度为：61,249 字节

78 01 - No Compression/low
78 9C - Default Compression
78 DA - Best Compression （采用zilb的Best Compression 进行压缩（即level为9））

——根据以上信息可以看出，前16位字节，八位为固定标志符“CatScene”
后八位字节，前四位表示数据体长度，后四位表示数据体解压后长度。

将解压后的数据体命名后缀为bin，我们看001.bin和002.bin
001.bin
0x18ED(十进制6381)	0x36(十进制54)	0x01B0(十进制432)	0x060C(十进制1548)
前32位十六进制数：
Offset      0  1  2  3  4  5  6  7   8  9  A  B  C  D  E  F
00000000   ED 18 00 00 36 00 00 00  B0 01 00 00 0C 06 00 00   ?  6   ?      
00000010   2C 00 00 00 00 00 00 00  02 00 00 00 2C 00 00 00   ,           ,   

002.bin
0x01F13C(十进制127292)	0x0303(十进制771)	0x1818(十进制6168)	0x6458(十进制25688)
前32位十六进制数：
Offset      0  1  2  3  4  5  6  7   8  9  A  B  C  D  E  F
00000000   3C F1 01 00 03 03 00 00  18 18 00 00 58 64 00 00   <?         Xd  
00000010   2D 00 00 00 00 00 00 00  09 00 00 00 2D 00 00 00   -           -   

——根据前人的分析：
第一个数表示该 .bin 文件数据体的长度，第二个数表示语句组的个数，第三个数表示偏移表的偏移量，第四个数表示语句块的偏移量。


总结：
首先，你要知道所谓的“语句组”是什么，其实就是一段执行代码，由程序执行的代码，比如显示背景、播放声音、显示文本等
那么一段“语句组”结束的标志符就是文本中的<\x02>，结束完就等待玩家输入，输入啥，其实就是点击鼠标......
比如对于001.bin“2C 00 00 00 00 00 00 00”，就表示这个语句组包含2C(十进制44)个语句结束的标志符就是文本中的<\x02>，
起始位置就是0，这个0是相对于文本而言的，不是地址偏移量。
“02 00 00 00 2C 00 00 00”，表示这个语句组包含2个语句，起始位置就是2C(从0开始算)。

对于002.bin “2D 00 00 00 00 00 00 00”，表示这个语句组包含2D(十进制45)个语句，起始位置就是0，
09 00 00 00 2D 00 00 00”，表示这个语句组包含9个语句（包含结束标志符<\x02>），起始位置就是2D(从0开始算)。

关于索引表（对于001.bin，索引表从0x01B0+0x10=0x01C0开始）
001.bin 索引表
Offset      0  1  2  3  4  5  6  7   8  9  A  B  C  D  E  F
000001C0   00 00 00 00 15 00 00 00  2C 00 00 00 37 00 00 00           ,   7   
000001D0   41 00 00 00 4B 00 00 00  55 00 00 00 5F 00 00 00   A   K   U   _   
000001E0   69 00 00 00 73 00 00 00  83 00 00 00 8B 00 00 00   i   s   ?  ?  
000001F0   92 00 00 00 97 00 00 00  9C 00 00 00 A1 00 00 00   ?  ?  ?  ?  
记住，这个是语句、单个语句的索引，不是语句组的索引。
是这么看的，从语句块偏移量0x060C+0x10=0x061C开始
0x061C+0x00——0x061C+0x15是第一句
0x061C+0x15——0x061C+0x2C是第二句
0x061C+0x2C——0x061C+0x37是第三句
0x061C+0x37——0x061C+0x41是第四句
0x061C+0x41——0x061C+0x4B是第五句
......
以此类推。

这么看，其实整个封包对我们有用的东西只有“偏移表”和“语句块”，但分析封包可以增长知识